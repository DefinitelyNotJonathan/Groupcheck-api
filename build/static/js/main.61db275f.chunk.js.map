{"version":3,"sources":["ApiContext.js","config.js","Item/item.js","List/listMainNav.js","List/listMain.js","List/addList.js","Item/addItem.js","share/shareList.js","ErrorBoundary.js","dashboard/dashboard.js","List/list.js","List/listHomePage.js","homePage/homePage.js","login/login.js","signUp/signUp.js","LogoutButton.js","App.js","index.js"],"names":["React","createContext","items","lists","sharedLists","user","currentList","addList","addItem","deleteItem","deleteList","setUser","setLists","setSharedLists","setItems","setCurrentList","Item","handleClickDelete","listId","props","list_id","itemId","id","stringItemId","String","stringListId","fetch","config","method","credentials","body","JSON","stringify","then","res","ok","json","e","Promise","reject","context","this","name","content","priority","className","type","onClick","Component","contextType","ApiContext","defaultProps","ListMainNav","state","listName","setState","to","pathname","ListMain","toLogin","location","match","params","data","status","map","item","key","AddList","handleSubmit","bind","preventDefault","target","value","author","alert","headers","list","history","push","onSubmit","placeholder","AddItem","itemName","itemPriority","itemContent","stringId","goBack","htmlFor","ShareList","email","shareId","handleEmail","shareData","shared_to","executeTheShare","action","onChange","ErrorBoundary","hasError","errorMessage","children","Dashboard","List","handleAddContext","data-id","ListHomePage","catch","err","console","log","classname","HomePage","firstname","Login","p_word","handlePassword","validUserId","error","hasOwnProperty","Error","user_id","fetchUser","required","SignUp","FormData","sendData","entries","LogoutButton","handleLogout","App","handleDeleteItem","newItems","filter","handleDeleteList","newLists","newSharedLists","sharedList","path","component","exact","Provider","renderMainRoutes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.61db275f.chunk.js","sourcesContent":["import React from 'react';\n\nexport default React.createContext({\n  items: [],\n  lists: [],\n  sharedLists: [],\n  user: {},\n  currentList: [],\n  addList: () => { },\n  addItem: () => { },\n  deleteItem: () => { },\n  deleteList: () => { },\n  setUser: () => { },\n  setLists: () => { },\n  setSharedLists: () => { },\n  setItems: () => { },\n  setCurrentList: () => { },\n});\n","export default {\n    API_ENDPOINT:\n        'https://blooming-mountain-65487.herokuapp.com',\n};\n","import React from 'react';\nimport ApiContext from '../ApiContext';\nimport PropTypes from 'prop-types';\nimport config from '../config';\n\n\nclass Item extends React.Component {\n\n  static contextType = ApiContext;\n\n  handleClickDelete = () => {\n\n    let listId = this.props.list_id\n    let itemId = this.props.id\n    let stringItemId = String(itemId)\n    let stringListId = String(listId)\n\n    fetch(`${config.API_ENDPOINT}/api/items/` + stringListId + '/' + stringItemId, {\n      method: 'DELETE',\n      credentials: 'include',\n      body: JSON.stringify({\n        id: itemId,\n        list_id: listId\n      })\n    })\n      .then(res => {\n        if (!res.ok)\n          return res.json().then(e => Promise.reject(e));\n      })\n      .then(() => {\n        this.context.deleteItem(itemId);\n      })\n  }\n  render() {\n    const { name, content, priority } = this.props\n    return (\n      <div className='Item'>\n        <div className='Item_top_container'>\n          <h2 className='Item__title'>\n            {name}\n          </h2>\n          <button\n            className='Item__delete'\n            type='button'\n            onClick={this.handleClickDelete}\n          >\n            {' '}\n            Remove\n          </button>\n        </div>\n        <div className='Item__priorities'>\n          Priority:\n            {' '}\n          <span className='Item_Priority'>\n            {priority}\n          </span>\n        </div>\n        <div className='Item__content'>\n          <p className='Content'>\n            {content}\n          </p>\n        </div>\n      </div>\n    )\n  }\n}\nItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired\n};\n\nItem.defaultProps={\n  id:1,\n  name:\"\"\n}\n\nexport default Item;\n","import React from 'react';\nimport ApiContext from '../ApiContext';\nimport { Link } from 'react-router-dom';\n\nexport default class ListMainNav extends React.Component {\n    static contextType = ApiContext;\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            listName: this.props.listName,\n            listId: []\n        }\n    }\n    componentDidMount() {\n        this.setState({\n            listId: this.context.currentList\n        });\n    }\n    render() {\n        return (\n            <div className='ListMainNav_container'>\n                <nav className='ListMainNav_navbar'>\n                    <h2 className='ListMainNav_header'>{this.props.listName}</h2>\n                    <Link\n                        className='button'\n                        to={{\n                            pathname: '/add-item',\n                            state: {\n                                listName: this.props.listName,\n                                listId: this.context.currentList\n                            }\n                        }}\n                    >\n                        +\n                    </Link>\n                </nav>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport Item from '../Item/item';\nimport ApiContext from '../ApiContext';\nimport PropTypes from 'prop-types';\nimport ListMainNav from './listMainNav';\nimport config from '../config';\n\nclass ListMain extends React.Component {\n\n  static contextType = ApiContext\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      toLogin: false\n    }\n  }\n\n  componentDidMount() {\n    this.listName = this.props.location.state.listName\n    const { listId } = this.props.match.params\n    this.listId = listId\n    this.context.setCurrentList(listId);\n\n    //IF STATEMENT FOR CHECKING IF SESSION IS PRESENT\n\n    fetch(`${config.API_ENDPOINT}/api/lists/`, {\n      credentials: 'include'\n    })\n      .then(data => {\n        if (data.status === 403) {\n          this.setState({\n            toLogin: true\n          })\n        }\n      })\n\n    fetch(`${config.API_ENDPOINT}/api/items/` + listId, {\n      credentials: 'include'\n    })\n      .then(res => res.json())\n      .then(data => {\n        this.context.setItems(data);\n      })\n  }\n\n  render() {\n    if (this.state.toLogin === true) {\n      return <Redirect to='/login' />\n    }\n    let items = this.context.items\n    return (\n      <section className='Container ListMain_itemlistcontainer'>\n        <Link\n          className='button back'\n          to={{\n            pathname: '/',\n          }}\n        >\n          Back\n        </Link>\n        <ListMainNav listName={this.listName} />\n        <ul className=\"ListMain_itemlist\">\n          {items.map(item =>\n            <li key={item.id} className=\"ListMain_item\">\n              <Item\n                id={item.id}\n                list_id={item.list_id}\n                name={item.name}\n                priority={item.priority}\n                content={item.content}\n              />\n            </li>\n          )}\n        </ul>\n      </section>\n    )\n  }\n}\nListMain.defaultProps={\n  location:{\n    state:{}\n  },\n  match:{\n    params:{}\n  }\n}\nListMain.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.object\n  })\n};\n\nexport default ListMain;\n","import React from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport ApiContext from '../ApiContext.js';\nimport config from '../config';\n\nclass AddList extends React.Component {\n    static contextType = ApiContext;\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            toLogin: false\n        }\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    componentDidMount() {\n        //IF STATEMENT FOR CHECKING IF SESSION IS PRESENT\n        fetch(`${config.API_ENDPOINT}/api/lists/`, {\n            credentials: 'include'\n        })\n            .then(data => {\n                if (data.status === 403) {\n                    this.setState({\n                        toLogin: true\n                    });\n                }\n            })\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        let data = {\n            name: e.target.listName.value,\n            author: this.context.user.id\n        }\n        if (data.name === '') {\n            alert('please complete the required fields');\n            return false;\n        }\n        fetch(`${config.API_ENDPOINT}/api/lists/`, {\n            method: 'POST',\n            credentials: 'include',\n            headers: {\n                'content-type': 'application/json'\n            },\n            body: JSON.stringify(data),\n        })\n            .then(res => {\n                if (!res.ok){\n                    return res.json().then(e => Promise.reject(e))\n                }\n                return res.json()\n            })\n            .then(list => {\n                this.context.addList(list)\n                this.props.history.push('/');\n            })\n    }\n    render() {\n        if (this.state.toLogin === true) {\n            return <Redirect to='/login' />\n        }\n        return (\n            <div className='AddList_container'>\n                <Link\n                    className='button back'\n                    to={{\n                        pathname: '/'\n                    }}\n                >\n                    Back\n                 </Link>\n\n                <form onSubmit={this.handleSubmit} className=\"AddList_form\">\n                    <input id='nameInput' type=\"text\" name=\"listName\" placeholder=\"New List Name\" className=\"AddList_input\"></input>\n                    <button type=\"submit\" className=\"AddList_button\">Create List</button>\n                </form>\n\n            </div>\n        )\n    }\n}\n\nexport default AddList;","import React from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport ApiContext from '../ApiContext';\nimport config from '../config';\n\nclass AddItem extends React.Component {\n\n    static contextType = ApiContext;\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            toLogin: false\n        }\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        //IF STATEMENT FOR CHECKING IF SESSION IS PRESENT\n\n        fetch(`${config.API_ENDPOINT}/api/lists/`, {\n            credentials: 'include'\n        })\n            .then(data => {\n                if (data.status === 403) {\n                    this.setState({\n                        toLogin: true\n                    })\n                }\n            })\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        let data = {\n            key: e.target.itemName.value,\n            name: e.target.itemName.value,\n            priority: e.target.itemPriority.value,\n            list_id: this.context.currentList,\n            content: e.target.itemContent.value\n        }\n        const stringId = String(data.list_id)\n        if (data.name === '') {\n            alert('please complete the required fields');\n            return false;\n        } else if (data.content === '') {\n            alert('please complete the required fields');\n            return false;\n        } else if (data.priority === '') {\n            alert('please complete the required fields');\n            return false;\n        }\n        fetch(`${config.API_ENDPOINT}/api/items/` + stringId, {\n            method: 'POST',\n            credentials: 'include',\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(data)\n        })\n            .then(res => res.json())\n            .then((item) => {\n                this.context.addItem(item);\n                this.props.history.goBack();\n            })\n    }\n\n    render() {\n        if (this.state.toLogin === true) {\n            return <Redirect to='/login' />\n        }\n        return (\n            <div className=\"AddItem_container\">\n                <Link\n                    className='button back'\n                    to={{\n                        pathname: '/',\n                    }}\n                >\n                    Back\n                 </Link>\n\n                <form onSubmit={this.handleSubmit} className=\"AddItem_form\">\n\n                    <label htmlFor='nameInput' className=\"AddItem_label\">item name*</label>\n                    <input id='nameInput' type=\"text\" name=\"itemName\" placeholder=\"New Item Name\" className=\"AddItem_input\"></input>\n                    <label htmlFor='contentInput' className=\"AddItem_label\">item content*</label>\n                    <textarea id='contentInput' type=\"text\" name=\"itemContent\" className=\"AddItem_textarea\"></textarea>\n                    <label htmlFor=\"itemPriority\" className=\"AddItem_label\">Priority*</label>\n\n                    <select name=\"itemPriority\" id=\"AddItem_priority\"\n                    >\n                        <option value=\"\"></option>\n                        <option value=\"1\">1</option>\n                        <option value=\"2\">2</option>\n                        <option value=\"3\">3</option>\n                    </select>\n\n                    <button className=\"AddItem_button\">Create Note</button>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default AddItem;","import React from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport config from '../config';\nexport default class ShareList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            shareId: [],\n            listId: this.props.location.state.listId,\n            toLogin: false,\n        };\n        this.handleEmail = this.handleEmail.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        fetch(`${config.API_ENDPOINT}/api/lists/`, {\n            credentials: 'include',\n        })\n            .then((data) => {\n                if (data.status === 403) {\n                    this.setState({\n                        toLogin: true,\n                    });\n                }\n            });\n\n    }\n\n    handleEmail(e) {\n        this.setState({ email: e.target.value });\n    }\n\n    executeTheShare(shareId, listId) {\n        const shareData = {\n            list_id: listId,\n            shared_to: shareId,\n        };\n        fetch(`${config.API_ENDPOINT}/api/share/${shareId}/${listId}`, {\n            method: 'POST',\n            credentials: 'include',\n            body: JSON.stringify(shareData),\n        })\n            .then((res) => {\n                if (res.ok) {\n                    return res.json();\n                }\n                return res.json().then((e) => Promise.reject(e));\n            })\n            .then(() => {\n                alert('List was successfully shared!');\n                this.props.history.push('/');\n            })\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        this.email = this.state.email;\n        fetch(`${config.API_ENDPOINT}/api/share/${this.email}`, {\n            credentials: 'include',\n        })\n            .then((res) => {\n                if (res.status === 404) {\n                    alert('Oops, it appears there is no user linked to this email address.');\n                }\n                return res.json();\n            })\n            .then((data) => {\n                this.setState({\n                    shareId: data.id,\n                });\n                if (data) {\n                    this.executeTheShare(this.state.shareId, this.state.listId);\n                }\n            });\n    }\n\n    render() {\n        if (this.state.toLogin === true) {\n            return <Redirect to=\"/login\" />;\n        }\n        return (\n            <div className=\"ShareList_container\">\n                <h2 className=\"ShareList_header\">Share your list with a friend!</h2>\n                <Link\n                    className=\"button back\"\n                    to={{\n                        pathname: '/',\n                    }}\n                >\n                    Back\n                </Link>\n\n                <form\n                    action=\"\"\n                    onSubmit={this.handleSubmit}\n                    className=\"ShareList_form\"\n                >\n                    <div className=\"ShareList_input_container\">\n                        <label htmlFor=\"email\" className=\"ShareList_label\">Share to</label>\n                        <input type=\"text\" id=\"email\" name=\"email\" value={this.state.email} onChange={this.handleEmail} className=\"ShareList_input\" placeholder=\"email@domain.com\" />\n                    </div>\n                    <p className=\"ShareList_content\">\n                        Sharing is simple! Enter the email of a user you wish\n                        to share your list with, and submit! The user will see your list on their home\n                        page on their next login!\n                    </p>\n                    <button type=\"submit\" className=\"ShareList_button\">Submit</button>\n                </form>\n            </div>\n        );\n    }\n}\n\nShareList.defaultProps = {\n    location: {\n        state: {},\n    },\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass ErrorBoundary extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false,\n    };\n  }\n\n  static getDerivedStateFromError() {\n    return { hasError: true };\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <h2>{this.props.errorMessage}</h2>\n      );\n    }\n    return this.props.children;\n  }\n}\n\nErrorBoundary.propTypes = {\n  errorMessage: PropTypes.string.isRequired,\n};\n\nexport default ErrorBoundary;\n","import React from 'react';\n\nexport default class Dashboard extends React.Component {\n    render() {\n        return (\n            <div className=\"Dashboard_container\">\n                <nav className=\"Dashboard_nav\">\n                    <h2 className=\"Dashboard_header\">Welcome {this.props.name}!</h2>\n                </nav>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport ApiContext from '../ApiContext';\nimport config from '../config';\n\nclass List extends React.Component {\n    static contextType = ApiContext;\n    constructor(props) {\n        super(props);\n        this.state = {\n            listName: this.props.name,\n            listId: this.props.id\n        }\n        this.handleAddContext = this.handleAddContext.bind(this);\n    }\n    handleAddContext = (id) => {\n        this.context.setCurrentList(id);\n    }\n    handleClickDelete = () => {\n        const listId = this.props.id\n        const author = this.props.author\n        const stringListId = String(listId)\n        fetch(`${config.API_ENDPOINT}/api/lists/` + stringListId, {\n            method: 'DELETE',\n            credentials: 'include',\n            body: JSON.stringify({\n                list_id: listId,\n                author: author\n            }),\n            type: \"json\",\n        })\n            .then(res => {\n                if (!res.ok)\n                    return res.json().then(e => Promise.reject(e));\n            })\n            .then(() => {\n                this.context.deleteList(listId);\n            })\n    }\n\n    render() {\n        const id = this.props.id\n        return (\n            <li key={id} data-id={id} className='List'>\n                <Link\n                    className='ListHomePage__List-link'\n                    to={{\n                        pathname: `/lists/${id}`,\n                        state: {\n                            listName: this.props.name,\n                            listId: this.props.id\n                        }\n                    }}\n                >\n                    {this.state.listName}\n                </Link>\n                <div className='List_Buttons_Container'>\n                    <button\n                        className='List__delete'\n                        type='button'\n                        onClick={this.handleClickDelete}\n                    >\n                        {' '}\n                  Remove\n                </button>\n                    <Link\n                        className='button'\n                        to={{\n                            pathname: '/share-list',\n                            state: {\n                                listName: this.props.name,\n                                listId: this.props.id\n                            }\n                        }}\n                    >\n                        Share\n                    </Link>\n\n                </div>\n\n            </li>\n        )\n    }\n}\n\nexport default List;","import React from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport List from './list';\nimport ApiContext from '../ApiContext';\nimport config from '../config';\n\nexport default class ListHomePage extends React.Component {\n\n  static contextType = ApiContext;\n  state = {\n    toLogin: false\n  }\n\n  componentDidMount() {\n\n    //IF STATEMENT FOR CHECKING IF SESSION IS PRESENT\n    fetch(`${config.API_ENDPOINT}/api/lists/`, {\n      headers: { \"Content-Type\": \"application/json\" },\n      credentials: 'include'\n    })\n      .then(data => {\n        if (data.status === 403) {\n          this.setState({\n            toLogin: true\n          })\n        }\n      })\n    fetch(`${config.API_ENDPOINT}/api/lists/`, {\n      headers: { \"Content-Type\": \"application/json\" },\n      credentials: 'include'\n    })\n      .then(res => res.json())\n      .then(data => {\n        this.context.setLists(data);\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n\n    fetch(`${config.API_ENDPOINT}/api/lists/shared`, {\n      method: 'GET',\n      headers: { \"Content-Type\": \"application/json\" },\n      credentials: 'include'\n    })\n      .then(res => res.json())\n      .then(data => {\n        this.context.setSharedLists(data);\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n\n  }\n  render() {\n    if (this.state.toLogin === true) {\n      return <Redirect to='/login' />\n    }\n    let lists = this.context.lists\n    let sharedLists = this.context.sharedLists\n    return (\n      <div className='ListHomePage_container'>\n        <h2 className='ListHomePage_h2'>Your Lists</h2>\n        <Link\n          className='button'\n          to=\"/add-list\"\n        >\n          +\n              </Link>\n        <ul className='ListHomePage__list_ul'>\n          {\n            lists.map(list => (\n              <List\n                key={list.id}\n                id={list.id}\n                name={list.name}\n                classname='ListHomePage_list'\n              />\n            ))}\n        </ul>\n        <h2 className=\"ListHomePage_shared_lists_h2\">Lists Shared To You</h2>\n        <ul className='ListHomePage__sharedLists__ul'>\n          {\n            sharedLists.map(list => (\n              <List\n                key={list.id}\n                id={list.id}\n                name={list.name}\n                author={list.author}\n              />\n            ))\n          }\n        </ul>\n\n      </div>\n    )\n\n  }\n}\n\nListHomePage.defaultProps = {\n  lists: []\n}","import React from 'react';\nimport Dashboard from '../dashboard/dashboard';\nimport ListHomePage from '../List/listHomePage';\nimport ApiContext from '../ApiContext';\nimport { Redirect } from 'react-router-dom';\nimport config from '../config';\n\nexport default class HomePage extends React.Component {\n\n  static contextType = ApiContext;\n  state = {\n    toLogin: false\n  }\n\n  componentDidMount() {\n    //IF STATEMENT FOR CHECKING IF SESSION IS PRESENT\n\n    fetch(`${config.API_ENDPOINT}/api/lists/`, {\n      credentials: 'include'\n    })\n      .then(data => {\n        if (data.status === 403) {\n          this.setState({\n            toLogin: true\n          })\n        }\n      })\n  }\n\n  render() {\n    if (this.state.toLogin === true) {\n      return <Redirect to='/login' />\n    }\n    return (\n      <div className=\"Homepage_Container\">\n        <Dashboard name={this.context.user.firstname} className=\"Homepage_DashboardComp\"></Dashboard>\n        <ListHomePage\n          className=\"Homepage_ListHomePageComp\"\n        ></ListHomePage>\n      </div>\n\n    )\n  }\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport ApiContext from '../ApiContext';\nimport config from '../config';\n\nexport default class Login extends React.Component {\n\n    static contextType = ApiContext;\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            p_word: ''\n        };\n\n        this.handlePassword = this.handlePassword.bind(this);\n        this.handleEmail = this.handleEmail.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handlePassword(e) {\n        this.setState({ p_word: e.target.value });\n    }\n\n    handleEmail(e) {\n        this.setState({ email: e.target.value });\n    }\n\n    fetchUser(validUserId) {\n        return fetch(`${config.API_ENDPOINT}/api/users/` + validUserId, {\n            method: 'GET',\n            headers: { \"Content-Type\": \"application/json\" },\n            credentials: 'same-origin' // <  -- changed this from 'include'\n        })\n        .catch((error) => {\n            console.log('some error happened fetchUser()');\n            if(error){\n                console.log(error);\n            }\n        })\n        .then(res => res.json())\n    }\n\n    handleSubmit(e) {\n        console.log('handleSubmit()');\n        e.preventDefault();\n        const data = this.state;\n        console.log(data);\n        fetch(`${config.API_ENDPOINT}/api/login`, {\n            method: 'POST',\n            headers: { \"Content-Type\": \"application/json\" },\n            credentials: 'include',\n            body: JSON.stringify(data),\n            // mode: 'cors'\n        })\n        .then(res => res.json())\n        .then((data) => {\n            console.log('handleSubmit return fetch')\n            console.log(data)\n            if (data && data.hasOwnProperty(\"id\")) {\n                return data.id\n            } else {\n                throw new Error('Something went wrong');\n            }\n        })\n        .then((user_id) => this.fetchUser(user_id))\n        .then((user) => {\n\n            console.log('the server knows us as:');\n            console.log(user);\n\n            if (user && user.hasOwnProperty('id')) {\n                this.context.setUser(user)\n                this.props.history.push('/')\n            } else {\n                // some problem with the data load!\n            }\n        })\n    }\n    render() {\n        return (\n            <div className=\"Login_container\">\n                <h2>Demo Credentials</h2>\n                <p>Email: test@test.test</p>\n                <p>Password: test</p>\n                <p>Email: test2@test.test</p>\n                <p>Password: test</p>\n                <form action=\"\"\n                    onSubmit={(e) => this.handleSubmit(e)}\n                    className=\"Login_form\"\n                >\n                    <label htmlFor=\"email\" className=\"Login_label\">Email</label>\n                    <input type=\"text\" id=\"email\" name=\"email\" value=\"test@test.test\" onChange={(e) => this.handleEmail(e)} className=\"Login_input\" required></input>\n                    <label htmlFor=\"password\" className=\"Login_label\">Password</label>\n                    <input type=\"password\" id=\"password\" name=\"password\" value=\"test\" onChange={(e) => this.handlePassword(e)} className=\"Login_input\" required ></input>\n\n                    <div className=\"Login_buttoncontainer\">\n                        <button type=\"submit\" className=\"Login_button\" >Sign In</button>\n                    </div>\n                    <Link to=\"/signup\" className=\"Login_signup\">Create an account</Link>\n                </form>\n                <br/>\n                <p className=\"welcome\">\n                    Welcome to Groupcheck! Planning for a camping trip? Need to send off a to do list? Look no further than Groupcheck.\n                    Simply sign up, sign in, and begin creating and sharing!\n                </p>\n\n            </div>\n\n        )\n    }\n}","import React from 'react';\nimport ApiContext from '../ApiContext'\nimport config from '../config'\nimport { Link } from 'react-router-dom'\n\nexport default class SignUp extends React.Component {\n\n    static contextType = ApiContext;\n\n    constructor(props) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n\n    handleSubmit(e) {\n        e.preventDefault();\n        const data = new FormData(e.target);\n        let sendData = {};\n        for (var key of data.entries()) {\n            sendData[key[0]] = key[1];\n        }\n        fetch(`${config.API_ENDPOINT}/api/users`, {\n            method: 'POST',\n            credentials: 'include',\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(sendData)\n        })\n            .then(res => res.json())\n            .then((user) => {\n                if (user && user.hasOwnProperty(\"id\")) {\n                    this.context.setUser({ id: user.id })\n                    this.props.history.push('/login')\n                } else {\n                    alert('This email address is already being used by another account')\n                }\n            })\n    }\n\n\n    render() {\n        return (\n            <div className=\"SignUp_container\">\n                <Link\n                    className='button back'\n                    to={{\n                        pathname: '/login',\n                    }}\n                >\n                    Back\n                 </Link>\n                <form onSubmit={this.handleSubmit} className=\"SignUp_form\">\n                    <h2 className=\"SignUp_header\">Sign Up</h2>\n                    <label htmlFor=\"firstname\" className=\"SignUp_label\">First Name*</label>\n                    <input type=\"text\" id=\"firstname\" name=\"firstname\" className=\"SignUp_input\" required></input>\n                    <label htmlFor=\"lastname\" className=\"SignUp_label\">Last Name*</label>\n                    <input type=\"text\" id=\"lastname\" name=\"lastname\" className=\"SignUp_input\" required></input>\n                    <label htmlFor=\"email\" className=\"SignUp_label\">Email*</label>\n                    <input type=\"text\" id=\"email\" name=\"email\" className=\"SignUp_input\" required></input>\n                    <label htmlFor=\"p_word\" id=\"p_word\" name=\"p_word\" className=\"SignUp_label\">Password*</label>\n                    <input type=\"password\" id=\"p_word\" name=\"p_word\" className=\"SignUp_input\" required></input>\n                    <div className=\"SignUp_button_container\">\n                        <button name=\"signup\" className=\"SignUp_button\" >Sign Up!</button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\n","import React from 'react';\nimport config from './config';\n\nexport default class LogoutButton extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.handleLogout = this.handleLogout.bind(this);\n    }\n\n    handleLogout() {\n        fetch(`${config.API_ENDPOINT}/api/logout`, {\n            credentials: 'include',\n        })\n            .then(() => {\n                this.props.history.push('/login');\n            });\n    }\n\n    render() {\n        return (\n            <div className=\"logout\">\n                <button type=\"button\" onClick={this.handleLogout}>Logout</button>\n            </div>\n        )\n\n    }\n\n}\n","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport ListMain from './List/listMain';\nimport ApiContext from './ApiContext';\nimport AddList from './List/addList';\nimport AddItem from './Item/addItem';\nimport ShareList from './share/shareList';\nimport ErrorBoundary from './ErrorBoundary';\nimport HomePage from './homePage/homePage';\nimport Login from './login/login';\nimport SignUp from './signUp/signUp';\nimport './App.css'\nimport LogoutButton from './LogoutButton';\n\n\nclass App extends Component {\n  state = {\n    items: [],\n    lists: [],\n    sharedLists: [],\n    user: {},\n    currentList: []\n  }\n\n  renderMainRoutes() {\n    return (\n      <Switch>\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/\" >\n          <Route path=\"/\" component={LogoutButton} className=\"logout\" />\n          <Route exact path=\"/\" component={HomePage} />\n          <Route path=\"/signup\" component={SignUp} />\n          <Route exact path=\"/lists/:listId\" component={ListMain} />\n          <Route path=\"/add-list\" component={AddList} />\n          <Route path=\"/add-item\" component={AddItem} />\n          <Route path=\"/share-list\" component={ShareList} />\n        </Route>\n      </Switch>\n    );\n  }\n\n  handleDeleteItem = (id) => {\n    let newItems = this.state.items.filter(item => item.id !== id)\n    this.setState({\n      items: newItems\n    });\n  }\n\n  handleDeleteList = (id) => {\n    let newItems = this.state.items.filter((item) => item.listId !== id);\n    let newLists = this.state.lists.filter((list) => list.id !== id);\n    let newSharedLists = this.state.sharedLists.filter((sharedList) => sharedList.id !== id)\n    this.setState({\n      items: newItems\n    });\n    this.setState({\n      lists: newLists\n    });\n    this.setState({\n      sharedLists: newSharedLists\n    });\n  }\n  render() {\n    const value = {\n      items: this.state.items,\n      lists: this.state.lists,\n      sharedLists: this.state.sharedLists,\n      user: this.state.user,\n      currentList: this.state.currentList,\n      deleteItem: this.handleDeleteItem,\n      deleteList: this.handleDeleteList,\n      addItem: (item) => {\n        this.state.items.push(item);\n        this.setState(this.state);\n      },\n      addList: (list) => {\n        this.state.lists.push(list);\n        this.setState(this.state);\n      },\n      setUser: (user) => {\n        this.setState({ user: user });\n      },\n      setLists: (data) => {\n        this.setState({ lists: data });\n      },\n      setSharedLists: (data) => {\n        this.setState({ sharedLists: data });\n      },\n      setItems: (data) => {\n        this.setState({ items: data })\n      },\n      setCurrentList: (data) => {\n        this.setState({ currentList: data })\n      }\n    };\n\n    return (\n      <ApiContext.Provider value={value}>\n        <div className=\"App\">\n          <header className=\"App__header\">\n            <h1>\n              GroupCheck\n            </h1>\n          </header>\n          <ErrorBoundary errorMessage='could not display MainRoutes'>\n            <main className=\"App__main\">{this.renderMainRoutes()}\n            </main>\n          </ErrorBoundary>\n\n        </div>\n      </ApiContext.Provider>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'));\n"],"sourceRoot":""}